(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[267],{3905:function(e,r,n){"use strict";n.d(r,{Zo:function(){return u},kt:function(){return f}});var t=n(7294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function c(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),g=function(e){var r=t.useContext(i),n=r;return e&&(n="function"==typeof e?e(r):l(l({},r),e)),n},u=function(e){var r=g(e.components);return t.createElement(i.Provider,{value:r},e.children)},s={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},p=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=g(n),f=o,m=p["".concat(i,".").concat(f)]||p[f]||s[f]||a;return n?t.createElement(m,l(l({ref:r},u),{},{components:n})):t.createElement(m,l({ref:r},u))}));function f(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=p;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var g=2;g<a;g++)l[g]=n[g];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3996:function(e,r,n){"use strict";n.r(r),n.d(r,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return i},toc:function(){return g},default:function(){return s}});var t=n(2122),o=n(9756),a=(n(7294),n(3905)),l={},c="\u7eb9\u7406",i={unversionedId:"texture",id:"texture",isDocsHomePage:!1,title:"\u7eb9\u7406",description:"\u7eb9\u7406\uff08Texture\uff09\u662f\u4e00\u5f20\u56fe\u7247\uff0c\u5b83\u53ef\u4ee5\u8d34\u5728\u6a21\u578b\u7684\u8868\u9762\u5c31\u50cf\u76ae\u80a4\u4e00\u6837\u3002\u9664\u4e86\u56fe\u50cf\u4e4b\u5916\u5b83\u8fd8\u53ef\u4ee5\u5b58\u50a8\u5176\u4ed6\u6570\u636e\uff0c\u8fd9\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u3002",source:"@site/docs/16-texture.md",sourceDirName:".",slug:"/texture",permalink:"/learn-webgl/docs/texture",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/16-texture.md",version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u8f68\u9053\u63a7\u5236\u5668",permalink:"/learn-webgl/docs/orbit"},next:{title:"Blinn-Phong \u5149\u7167",permalink:"/learn-webgl/docs/blinn-phong"}},g=[],u={toc:g};function s(e){var r=e.components,n=(0,o.Z)(e,["components"]);return(0,a.kt)("wrapper",(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"\u7eb9\u7406"},"\u7eb9\u7406"),(0,a.kt)("p",null,"\u7eb9\u7406\uff08Texture\uff09\u662f\u4e00\u5f20\u56fe\u7247\uff0c\u5b83\u53ef\u4ee5\u8d34\u5728\u6a21\u578b\u7684\u8868\u9762\u5c31\u50cf\u76ae\u80a4\u4e00\u6837\u3002\u9664\u4e86\u56fe\u50cf\u4e4b\u5916\u5b83\u8fd8\u53ef\u4ee5\u5b58\u50a8\u5176\u4ed6\u6570\u636e\uff0c\u8fd9\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u8be6\u7ec6\u8bb2\u89e3\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"run",run:!0},"const image = new Image()\nimage.crossOrigin=''\nimage.onload=() => render(image)\nimage.src='http://localhost:3000/learn-webgl/img/uv.jpg'\n\nfunction render(image) {\n  const gl = createGl()\n\n  const program = createProgramFromSource(gl, `\n  attribute vec4 pos;\n  varying vec2 texCoord;\n\n  void main() {\n    texCoord = pos.xy;\n    gl_Position = pos;\n  }\n  `, `\n  precision mediump float;\n  uniform sampler2D img;\n  varying vec2 texCoord;\n\n  void main() {\n    gl_FragColor = texture2D(img, texCoord);\n  }\n  `)\n\n  const [posLoc, posBuffer] = createAttrBuffer(gl, program, 'pos', new Float32Array([\n    0.0,  0.0,\n    1.0,  0.0,\n    0.0,  1.0,\n    0.0,  1.0,\n    1.0,  0.0,\n    1.0,  1.0,\n  ]))\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, posBuffer)\n  gl.vertexAttribPointer(posLoc, 2, gl.FLOAT, false, 0, 0)\n  gl.enableVertexAttribArray(posLoc)\n\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image)\n\n  gl.clearColor(0, 0, 0, 0)\n  gl.clear(gl.COLOR_BUFFER_BIT)\n  gl.drawArrays(gl.TRIANGLES, 0, 6)\n}\n\nfunction createShader(gl, type, source) {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  return shader;\n}\n\nfunction createProgramFromSource(gl, vertex, fragment) {\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER,vertex)\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragment)\n  const program = gl.createProgram()\n  gl.attachShader(program, vertexShader)\n  gl.attachShader(program, fragmentShader)\n  gl.linkProgram(program)\n  gl.useProgram(program)\n  return program\n}\n\nfunction createAttrBuffer(gl, program, attr, data) {\n  const location = gl.getAttribLocation(program, attr)\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW)\n  return [location, buffer]\n}\n")))}s.isMDXComponent=!0}}]);